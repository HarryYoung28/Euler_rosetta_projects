# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first terms will be 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms

current_number = 2
last_number = 1
maximum_number = 4000000
even_numbers = []

while current_number < maximum_number:
    if current_number % 2 == 0 and current_number not in even_numbers:
        # if current_number not in even_numbers:
        even_numbers.append(current_number)
    new_number = last_number + current_number
    last_number = current_number
    current_number = new_number

result = 0

for number in even_numbers:
    result += int(number)

print(result)

# checked on euler problems and result is correct :)
